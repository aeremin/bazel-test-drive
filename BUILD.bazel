load("//:kotlin.bzl", "kt_jvm_binary", "kt_jvm_test")
load("@io_bazel_rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("@io_bazel_rules_docker//java:image.bzl", "java_image")
load("@io_bazel_rules_docker//docker:docker.bzl", "docker_push")
load("@rules_jvm_external//:defs.bzl", "artifact")

java_library(
    name = "greeter",
    srcs = ["Greeting.java"],
)

kt_jvm_binary(
    name = "example",
    srcs = ["Example.kt"],
    main_class = "com.example.ExampleKt",
    deps = [
        ":greeter",
    ],
)

kt_jvm_test(
    name = "example_test",
    srcs = [
        "ExampleTest.kt",
    ],
    test_class = "com.example.ExampleTest",
    deps = [
        ":greeter",
        "//third_party:kotest",
    ],
)

kt_jvm_binary(
    name = "server",
    srcs = ["Server.kt"],
    main_class = "com.example.ServerKt",
    deps = [
        "//third_party:ktor",
    ],
)

java_image(
    name = "server_docker",
    main_class = "com.example.ServerKt",
    runtime_deps = [":server"],
)

docker_push(
    name = "push_server",
    image = ":server_docker",
    registry = "europe-central2-docker.pkg.dev",
    repository = "alice-larp/bazel-test-drive/server",
)

kt_jvm_library(
    name = "dependency_test_kotlin",
    srcs = ["DependencyTestKotlin.kt"],
    deps = [
        artifact("org.slf4j:slf4j-api"),
        artifact("org.slf4j:slf4j-simple"),
    ],
)

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

nodejs_binary(
    name = "example_nodejs",
    entry_point = "example.js",
)
